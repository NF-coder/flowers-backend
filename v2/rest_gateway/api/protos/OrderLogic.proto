// AUTOMATICALLY GENERATED BY SimpleRPC

syntax = "proto3";
import "google/protobuf/empty.proto";
package OrderLogicpkg;

service OrderLogic {
    rpc create_order(create_orderRequest) returns (create_orderResponce) {}
    rpc order_info(order_infoRequest) returns (order_infoResponce) {}
    rpc get_active_by_userId(get_active_by_userIdRequest) returns (get_active_by_userIdResponce) {}
}

message create_orderRequest {
    string country = 1;
    string city = 2;
    string street = 3;
    string building = 4;
    string flat = 5;
    int64 userId = 6;
    repeated int64 productIdArray = 7;
    string firstName = 8;
    string phoneNumber = 9;
    string secondName = 10;
    string comment = 11;
}
message order_infoRequest {
    int64 orderId = 1;
}
message create_orderResponce {
}
message order_infoResponce {
    int64 orderId = 1;
    string costumerFirstName = 2;
    string costumerSecondName = 3;
    string comment = 4;
    string phoneNumber = 5;
    bool isFinished = 6;
    bool isCanceled = 7;
    string country = 8;
    string city = 9;
    string street = 10;
    string building = 11;
    string flat = 12;
    int64 userId = 13;
    int64 productId = 14;
    string orderStatus = 15;
    int64 orderCreatedTimestamp = 16;
}
message OrderSchema {
    int64 orderId = 1;
    string costumerFirstName = 2;
    string costumerSecondName = 3;
    string comment = 4;
    string phoneNumber = 5;
    bool isFinished = 6;
    bool isCanceled = 7;
    string country = 8;
    string city = 9;
    string street = 10;
    string building = 11;
    string flat = 12;
    int64 userId = 13;
    int64 productId = 14;
    string orderStatus = 15;
    int64 orderCreatedTimestamp = 16;
}
message get_active_by_userIdResponce {
    repeated OrderSchema OrderSchemasArray = 1;
}
message get_active_by_userIdRequest {
    int64 userId = 1;
}
